{
  "ocs": [
    {
      "cn": "Users API",
      "cd": "Operations related to user management",
      "ces": [
        {
          "en": "Get All Users",
          "ed": "Retrieves a list of all users.",
          "em": "GET",
          "ep": "/v1/users",
          "ecp": [
            "v1",
            "users"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 100 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [],
          "eqp": [
            {
              "pn": "limit",
              "pd": "Maximum number of users to return.",
              "pr": false,
              "pt": "integer",
              "pv": "10"
            },
            {
              "pn": "offset",
              "pd": "Number of users to skip before starting to return results.",
              "pr": false,
              "pt": "integer",
              "pv": "0"
            }
          ],
          "ebp": [],
          "erc": {
            "200": "Successfully retrieved list of users.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "429": "Too Many Requests: Rate limit exceeded."
          },
          "ere": {
            "200": "[\n  {\n    \"id\": \"user123\",\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\"\n  },\n  {\n    \"id\": \"user456\",\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane.smith@example.com\"\n  }\n]"
          }
        },
        {
          "en": "Create User",
          "ed": "Creates a new user in the system.",
          "em": "POST",
          "ep": "/v1/users",
          "ecp": [
            "v1",
            "users"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            },
            {
              "pn": "Content-Type",
              "pd": "Specifies the request body format.",
              "pr": true,
              "pt": "string",
              "pv": "application/json"
            }
          ],
          "epp": [],
          "eqp": [],
          "ebp": [
            {
              "pn": "name",
              "pd": "The full name of the user.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "email",
              "pd": "The unique email address of the user.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "password",
              "pd": "The user's password.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "erc": {
            "201": "User successfully created.",
            "400": "Bad Request: Invalid input data.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "409": "Conflict: User with this email already exists."
          },
          "ere": {
            "201": "{\n  \"id\": \"user789\",\n  \"name\": \"Alice Brown\",\n  \"email\": \"alice.brown@example.com\"\n}"
          }
        },
        {
          "en": "Get User by ID",
          "ed": "Retrieves a specific user by their unique ID.",
          "em": "GET",
          "ep": "/v1/users/{id}",
          "ecp": [
            "v1",
            "users",
            "{id}"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 100 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [
            {
              "pn": "id",
              "pd": "The unique identifier of the user.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "eqp": [],
          "ebp": [],
          "erc": {
            "200": "Successfully retrieved user details.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: User with the specified ID does not exist."
          },
          "ere": {
            "200": "{\n  \"id\": \"user123\",\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\"\n}"
          }
        },
        {
          "en": "Update User by ID",
          "ed": "Updates an existing user's details by their unique ID.",
          "em": "PUT",
          "ep": "/v1/users/{id}",
          "ecp": [
            "v1",
            "users",
            "{id}"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            },
            {
              "pn": "Content-Type",
              "pd": "Specifies the request body format.",
              "pr": true,
              "pt": "string",
              "pv": "application/json"
            }
          ],
          "epp": [
            {
              "pn": "id",
              "pd": "The unique identifier of the user to update.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "eqp": [],
          "ebp": [
            {
              "pn": "name",
              "pd": "The updated full name of the user.",
              "pr": false,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "email",
              "pd": "The updated unique email address of the user.",
              "pr": false,
              "pt": "string",
              "pv": null
            }
          ],
          "erc": {
            "200": "User successfully updated.",
            "400": "Bad Request: Invalid input data.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: User with the specified ID does not exist.",
            "409": "Conflict: New email already in use by another user."
          },
          "ere": {
            "200": "{\n  \"id\": \"user123\",\n  \"name\": \"Johnathan Doe\",\n  \"email\": \"john.doe@example.com\"\n}"
          }
        },
        {
          "en": "Delete User by ID",
          "ed": "Deletes a specific user by their unique ID.",
          "em": "DELETE",
          "ep": "/v1/users/{id}",
          "ecp": [
            "v1",
            "users",
            "{id}"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [
            {
              "pn": "id",
              "pd": "The unique identifier of the user to delete.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "eqp": [],
          "ebp": [],
          "erc": {
            "204": "User successfully deleted (No Content).",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: User with the specified ID does not exist."
          },
          "ere": {
            "204": ""
          }
        }
      ]
    },
    {
      "cn": "Posts API",
      "cd": "Operations related to blog posts",
      "ces": [
        {
          "en": "Get All Posts",
          "ed": "Retrieves a list of all blog posts.",
          "em": "GET",
          "ep": "/v1/posts",
          "ecp": [
            "v1",
            "posts"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 100 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [],
          "eqp": [
            {
              "pn": "authorId",
              "pd": "Filter posts by author ID.",
              "pr": false,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "status",
              "pd": "Filter posts by status (e.g., 'published', 'draft').",
              "pr": false,
              "pt": "string",
              "pv": "published"
            }
          ],
          "ebp": [],
          "erc": {
            "200": "Successfully retrieved list of posts.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "429": "Too Many Requests: Rate limit exceeded."
          },
          "ere": {
            "200": "[\n  {\n    \"id\": \"post101\",\n    \"title\": \"My First Blog Post\",\n    \"authorId\": \"user123\",\n    \"content\": \"This is the content of my first post.\",\n    \"status\": \"published\"\n  },\n  {\n    \"id\": \"post102\",\n    \"title\": \"Another Great Read\",\n    \"authorId\": \"user456\",\n    \"content\": \"Here's some more interesting content.\",\n    \"status\": \"published\"\n  }\n]"
          }
        },
        {
          "en": "Create Post",
          "ed": "Creates a new blog post.",
          "em": "POST",
          "ep": "/v1/posts",
          "ecp": [
            "v1",
            "posts"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            },
            {
              "pn": "Content-Type",
              "pd": "Specifies the request body format.",
              "pr": true,
              "pt": "string",
              "pv": "application/json"
            }
          ],
          "epp": [],
          "eqp": [],
          "ebp": [
            {
              "pn": "title",
              "pd": "The title of the blog post.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "authorId",
              "pd": "The ID of the author of the post.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "content",
              "pd": "The main content of the blog post.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "status",
              "pd": "The publication status of the post (e.g., 'draft', 'published').",
              "pr": false,
              "pt": "string",
              "pv": "draft"
            }
          ],
          "erc": {
            "201": "Post successfully created.",
            "400": "Bad Request: Invalid input data.",
            "401": "Unauthorized: Authentication required or invalid token."
          },
          "ere": {
            "201": "{\n  \"id\": \"post103\",\n  \"title\": \"New Post Title\",\n  \"authorId\": \"user123\",\n  \"content\": \"Content of the new post.\",\n  \"status\": \"draft\"\n}"
          }
        },
        {
          "en": "Get Post by ID",
          "ed": "Retrieves a specific blog post by its unique ID.",
          "em": "GET",
          "ep": "/v1/posts/{id}",
          "ecp": [
            "v1",
            "posts",
            "{id}"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 100 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [
            {
              "pn": "id",
              "pd": "The unique identifier of the post.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "eqp": [],
          "ebp": [],
          "erc": {
            "200": "Successfully retrieved post details.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: Post with the specified ID does not exist."
          },
          "ere": {
            "200": "{\n  \"id\": \"post101\",\n  \"title\": \"My First Blog Post\",\n  \"authorId\": \"user123\",\n  \"content\": \"This is the content of my first post.\",\n  \"status\": \"published\"\n}"
          }
        },
        {
          "en": "Update Post by ID",
          "ed": "Updates an existing blog post's details by its unique ID.",
          "em": "PUT",
          "ep": "/v1/posts/{id}",
          "ecp": [
            "v1",
            "posts",
            "{id}"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            },
            {
              "pn": "Content-Type",
              "pd": "Specifies the request body format.",
              "pr": true,
              "pt": "string",
              "pv": "application/json"
            }
          ],
          "epp": [
            {
              "pn": "id",
              "pd": "The unique identifier of the post to update.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "eqp": [],
          "ebp": [
            {
              "pn": "title",
              "pd": "The updated title of the blog post.",
              "pr": false,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "content",
              "pd": "The updated main content of the blog post.",
              "pr": false,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "status",
              "pd": "The updated publication status of the post.",
              "pr": false,
              "pt": "string",
              "pv": null
            }
          ],
          "erc": {
            "200": "Post successfully updated.",
            "400": "Bad Request: Invalid input data.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: Post with the specified ID does not exist."
          },
          "ere": {
            "200": "{\n  \"id\": \"post101\",\n  \"title\": \"My Updated Blog Post\",\n  \"authorId\": \"user123\",\n  \"content\": \"This is the updated content.\",\n  \"status\": \"published\"\n}"
          }
        },
        {
          "en": "Delete Post by ID",
          "ed": "Deletes a specific blog post by its unique ID.",
          "em": "DELETE",
          "ep": "/v1/posts/{id}",
          "ecp": [
            "v1",
            "posts",
            "{id}"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [
            {
              "pn": "id",
              "pd": "The unique identifier of the post to delete.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "eqp": [],
          "ebp": [],
          "erc": {
            "204": "Post successfully deleted (No Content).",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: Post with the specified ID does not exist."
          },
          "ere": {
            "204": ""
          }
        }
      ]
    },
    {
      "cn": "Comments API",
      "cd": "Operations related to comments",
      "ces": [
        {
          "en": "Get All Comments",
          "ed": "Retrieves a list of all comments.",
          "em": "GET",
          "ep": "/v1/comments",
          "ecp": [
            "v1",
            "comments"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 100 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            }
          ],
          "epp": [],
          "eqp": [
            {
              "pn": "postId",
              "pd": "Filter comments by the ID of the associated post.",
              "pr": false,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "authorId",
              "pd": "Filter comments by the ID of the author.",
              "pr": false,
              "pt": "string",
              "pv": null
            }
          ],
          "ebp": [],
          "erc": {
            "200": "Successfully retrieved list of comments.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "429": "Too Many Requests: Rate limit exceeded."
          },
          "ere": {
            "200": "[\n  {\n    \"id\": \"comment201\",\n    \"postId\": \"post101\",\n    \"authorId\": \"user123\",\n    \"content\": \"Great post!\"\n  },\n  {\n    \"id\": \"comment202\",\n    \"postId\": \"post101\",\n    \"authorId\": \"user456\",\n    \"content\": \"I agree, very insightful.\"\n  }\n]"
          }
        },
        {
          "en": "Create Comment",
          "ed": "Creates a new comment for a post.",
          "em": "POST",
          "ep": "/v1/comments",
          "ecp": [
            "v1",
            "comments"
          ],
          "esu": "Authentication: API Key or Bearer Token. Rate Limit: 50 requests/minute.",
          "eh": [
            {
              "pn": "Authorization",
              "pd": "Bearer token for authentication.",
              "pr": true,
              "pt": "string",
              "pv": "Bearer <token>"
            },
            {
              "pn": "Content-Type",
              "pd": "Specifies the request body format.",
              "pr": true,
              "pt": "string",
              "pv": "application/json"
            }
          ],
          "epp": [],
          "eqp": [],
          "ebp": [
            {
              "pn": "postId",
              "pd": "The ID of the post the comment belongs to.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "authorId",
              "pd": "The ID of the user who authored the comment.",
              "pr": true,
              "pt": "string",
              "pv": null
            },
            {
              "pn": "content",
              "pd": "The text content of the comment.",
              "pr": true,
              "pt": "string",
              "pv": null
            }
          ],
          "erc": {
            "201": "Comment successfully created.",
            "400": "Bad Request: Invalid input data.",
            "401": "Unauthorized: Authentication required or invalid token.",
            "404": "Not Found: Associated post or author does not exist."
          },
          "ere": {
            "201": "{\n  \"id\": \"comment203\",\n  \"postId\": \"post101\",\n  \"authorId\": \"user789\",\n  \"content\": \"This is a new comment.\"\n}"
          }
        }
      ]
    }
  ]
}