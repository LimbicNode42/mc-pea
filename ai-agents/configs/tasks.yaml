api_link_discovery:
  description: >
    Comprehensively scrape text and links from the sidebar/menu of {website_url} including links hidden behind interaction elements like accordions and create a COMPLETE hierarchical sitemap of ALL discoveries. You MUST find EVERY single link in the sidebar/menu and categorize them based on their parent links. CRITICAL REQUIREMENT: Extract ONLY PATH-ONLY links (e.g., "/en/rest/actions/artifacts") NOT full URLs (e.g., "https://docs.github.com/en/rest/actions/artifacts"). This path-only format is essential for token optimization.
  expected_output: >
    An exhaustive structured list with ALL PATH-ONLY links (not full URLs), complete categories, hierarchical relationships, and comprehensive metadata. Output should include 100% of the links found in the sidebar/menu in path-only format (starting with "/" and excluding the domain). Links must be in format "/path/to/resource" not "https://domain.com/path/to/resource" for token efficiency.
  agent: >
    ApiLinkDiscoveryAgent
  async_execution: True
  # The following are for test purposes
  markdown: False
  # output_file: api_link_discovery_output.json

api_content_extraction:
  description: >
    Parse each URL from the below input JSON and extract API endpoint details. For each URL, identify:
    1. HTTP methods (GET, POST, PUT, DELETE, etc.)
    2. API paths/endpoints
    3. Parameters (path, query, body, headers)
    4. Authentication requirements
    5. Response codes and formats

    Input: {chunk}
    
    Output structured JSON matching the ApiLinkContentExtractorOutput schema.
  expected_output: >
    Valid JSON with structure: {"ocs": [{"cn": "category_name", "cd": "category_desc", "ces": [{"en": "endpoint_name", "ed": "description", "em": "HTTP_METHOD", "ep": "/api/path", "eh": [], "epp": [], "eqp": [], "ebp": [], "erc": {}, "ere": {}}]}]}. Include all discovered endpoints with complete parameter details.
  agent: >
    ApiLinkContentExtractorAgent
  async_execution: False
  context: >
    api_orchestrator
  # The following are for test purposes
  markdown: False
  # output_file: api_link_content_extractor_output.json

  api_content_collection:
